{"version":3,"sources":["types/FilterType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoList","todos","todo","isModalSeen","setTodo","setIsModalSeen","className","map","item","id","completed","title","btnClass","classNames","type","onClick","showModal","filteredTodos","TodoFilter","setVisibleTodos","useState","inputValue","setInputValue","isActive","setIsActive","isCompleted","setIsCompleted","filterTodosSelect","value","input","filter","toLowerCase","includes","filterTodosByOption","all","active","filterByInput","event","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","setShowModalBoolean","isModalLoading","setLoadingModal","name","email","phone","user","setUser","useEffect","getUserFromServer","a","result","href","App","isLoading","setIsLoading","setIsModalLoading","setTodos","visibleTodos","getTodosFromServer","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26674647.chunk.js","sourcesContent":["export enum FilterType {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  todo: Todo,\n  isModalSeen: boolean,\n  setTodo: (todo: Todo) => void,\n  setIsModalSeen: (value: boolean) => void,\n};\n\nexport const TodoList:\nReact.FC<Props> = ({\n  todos,\n  todo,\n  isModalSeen,\n  setTodo,\n  setIsModalSeen,\n}) => {\n  const showModal = (item: Todo) => {\n    setIsModalSeen(true);\n    setTodo(item);\n  };\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          { todos.map((item:Todo) => {\n            const { id, completed, title } = item;\n            const btnClass = classNames({\n              'has-text-success': completed,\n              'has-text-danger': !completed,\n            });\n\n            return (\n              <tr\n                data-cy=\"todo\"\n                className=\"\"\n                key={id}\n              >\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\">\n                  {completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={btnClass}>\n                    {title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => showModal(item)}\n                  >\n                    <span className=\"icon\">\n                      <i className={\n                        isModalSeen && item === todo\n                          ? 'far fa-eye-slash'\n                          : 'far fa-eye'\n                      }\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { FilterType } from '../../types/FilterType';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setVisibleTodos: (todos: Todo[]) => void,\n  visibleTodos: Todo[]\n};\nlet filteredTodos = [];\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setVisibleTodos }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [isActive, setIsActive] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  const filterTodosSelect = (value: boolean, input: string = inputValue) => {\n    filteredTodos = todos.filter((todo) => {\n      return todo.completed\n      === value && todo.title.toLowerCase().includes(input.toLowerCase());\n    });\n\n    return setVisibleTodos(filteredTodos);\n  };\n\n  const filterTodosByOption = (value: string) => {\n    switch (value) {\n      case FilterType.all:\n        setIsActive(false);\n        setIsCompleted(false);\n\n        filteredTodos = todos.filter((todo) => {\n          return todo.title.toLowerCase().includes(inputValue.toLowerCase());\n        });\n\n        return setVisibleTodos(filteredTodos);\n\n      case FilterType.active:\n        setIsActive(true);\n        setIsCompleted(false);\n\n        return filterTodosSelect(false);\n\n      case FilterType.completed:\n        setIsCompleted(true);\n        setIsActive(false);\n\n        return filterTodosSelect(true);\n\n      default:\n        break;\n    }\n\n    return value;\n  };\n\n  function filterByInput(event = '') {\n    if (isActive) {\n      filterTodosByOption(FilterType.active);\n\n      return filterTodosSelect(false, event);\n    }\n\n    if (isCompleted) {\n      filterTodosByOption(FilterType.completed);\n\n      return filterTodosSelect(true, event);\n    }\n\n    return setVisibleTodos(todos.filter((todo) => {\n      return todo.title.toLowerCase().includes(event.toLowerCase());\n    }));\n  }\n\n  const filterTodosByInput = (value: string) => {\n    setInputValue(value);\n    filterByInput(value);\n  };\n\n  const clearInput = () => {\n    setInputValue('');\n    filterByInput('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => filterTodosByOption(event.target.value)}\n          >\n            <option value={FilterType.all}>All</option>\n            <option value={FilterType.active}>\n              Active\n            </option>\n            <option value={FilterType.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(event) => filterTodosByInput(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"Clear input\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setIsModalSeen: (value: boolean) => void,\n  isModalLoading: boolean,\n  setLoadingModal: (value: boolean) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setIsModalSeen: setShowModalBoolean,\n  isModalLoading,\n  setLoadingModal,\n}) => {\n  const defaultUser = {\n    name: '',\n    email: '',\n    id: 0,\n    phone: '',\n  };\n\n  const [user, setUser] = useState<User>(defaultUser);\n\n  const {\n    title,\n    id,\n    userId,\n    completed,\n  } = todo;\n  const { name, email } = user;\n\n  useEffect(() => {\n    const getUserFromServer = async () => {\n      setLoadingModal(true);\n      const result = await getUser(userId);\n\n      setUser(result);\n      setLoadingModal(false);\n    };\n\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isModalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Close modal\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setShowModalBoolean(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                !completed\n                  ? <strong className=\"has-text-danger\">Planned</strong>\n                  : <strong className=\"has-text-success\">Done</strong>\n              }\n              {' by '}\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModalLoading, setIsModalLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [isModalSeen, setIsModalSeen] = useState(false);\n\n  const defaultTodo = {\n    title: '',\n    id: 0,\n    completed: false,\n    userId: 0,\n  };\n\n  const [todo, setTodo] = useState(defaultTodo);\n\n  useEffect(() => {\n    const getTodosFromServer = async () => {\n      setIsLoading(true);\n      const result = await getTodos();\n\n      setTodos(result);\n      setVisibleTodos(result);\n      setIsLoading(false);\n    };\n\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setVisibleTodos={setVisibleTodos}\n                visibleTodos={visibleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {(!!todos.length || !isLoading) && (\n                <TodoList\n                  todos={visibleTodos}\n                  isModalSeen={isModalSeen}\n                  todo={todo}\n                  setTodo={setTodo}\n                  setIsModalSeen={setIsModalSeen}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalSeen && (\n        <TodoModal\n          todo={todo}\n          setIsModalSeen={setIsModalSeen}\n          isModalLoading={isModalLoading}\n          setLoadingModal={setIsModalLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}