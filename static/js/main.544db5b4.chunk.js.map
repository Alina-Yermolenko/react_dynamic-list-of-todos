{"version":3,"sources":["types/FilterType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoList","todos","setTodo","setIsModalSeen","className","map","todo","id","completed","title","btnClass","classNames","type","onClick","showModal","TodoFilter","setVisibleTodos","useState","inputValue","setInputValue","isActive","setIsActive","isCompleted","setIsCompleted","filteredTodos","filterTodosSelect","value","input","filter","includes","filterTodosByOption","all","active","filterByInput","event","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","setShowModalBoolean","loadingModal","setLoadingModal","name","email","phone","user","setUser","useEffect","getUserFromServer","a","result","href","App","isLoading","setIsLoading","isModalLoading","setIsModalLoading","setTodos","visibleTodos","isModalSeen","getTodosFromServer","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.544db5b4.chunk.js","sourcesContent":["export enum FilterType {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setTodo: (todo: Todo) => void,\n  setIsModalSeen: (value: boolean) => void,\n};\n\nexport const TodoList:\nReact.FC<Props> = ({\n  todos,\n  setTodo,\n  setIsModalSeen,\n}) => {\n  const showModal = (todo: Todo) => {\n    setIsModalSeen(true);\n    setTodo(todo);\n  };\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            todos.map((todo:Todo) => {\n              const { id, completed, title } = todo;\n              const btnClass = classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              });\n\n              return (\n                <tr\n                  data-cy=\"todo\"\n                  className=\"\"\n                  key={id}\n                >\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={btnClass}>\n                      {title}\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => showModal(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i className=\"far fa-eye\" />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { FilterType } from '../../types/FilterType';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setVisibleTodos: (todos: Todo[]) => void,\n  visibleTodos: Todo[]\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setVisibleTodos }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [isActive, setIsActive] = useState(false);\n  const [isCompleted, setIsCompleted] = useState(false);\n  let filteredTodos = [];\n\n  const filterTodosSelect = (value: boolean, input: string = inputValue) => {\n    filteredTodos = todos.filter((todo) => {\n      return todo.completed === value && todo.title.includes(input);\n    });\n\n    return setVisibleTodos(filteredTodos);\n  };\n\n  const filterTodosByOption = (value: string) => {\n    switch (value) {\n      case FilterType.all:\n        setIsActive(false);\n        setIsCompleted(false);\n\n        filteredTodos = todos.filter((todo) => {\n          return todo.title.includes(inputValue);\n        });\n\n        return setVisibleTodos(filteredTodos);\n\n      case FilterType.active:\n        setIsActive(true);\n        setIsCompleted(false);\n\n        return filterTodosSelect(false);\n\n      case FilterType.completed:\n        setIsCompleted(true);\n        setIsActive(false);\n\n        return filterTodosSelect(true);\n\n      default:\n        break;\n    }\n\n    return value;\n  };\n\n  function filterByInput(event = '') {\n    if (isActive) {\n      filterTodosByOption(FilterType.active);\n\n      return filterTodosSelect(false, event);\n    }\n\n    if (isCompleted) {\n      filterTodosByOption(FilterType.completed);\n\n      return filterTodosSelect(true, event);\n    }\n\n    return setVisibleTodos(todos.filter((todo) => {\n      return todo.title.includes(event);\n    }));\n  }\n\n  const filterTodosByInput = (value: string) => {\n    setInputValue(value);\n    filterByInput(value);\n  };\n\n  const clearInput = () => {\n    setInputValue('');\n    filterByInput('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => filterTodosByOption(event.target.value)}\n          >\n            <option value={FilterType.all}>All</option>\n            <option value={FilterType.active}>\n              Active\n            </option>\n            <option value={FilterType.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(event) => filterTodosByInput(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"Clear input\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setIsModalSeen: (arg0: boolean) => void,\n  loadingModal: boolean,\n  setLoadingModal: (arg0: boolean) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setIsModalSeen: setShowModalBoolean,\n  loadingModal,\n  setLoadingModal,\n}) => {\n  const [user, setUser] = useState<User>({\n    name: '',\n    email: '',\n    id: 0,\n    phone: '',\n  });\n\n  const {\n    title, id, userId, completed,\n  } = todo;\n  const { name, email } = user;\n\n  useEffect(() => {\n    const getUserFromServer = async () => {\n      setLoadingModal(true);\n      const result = await getUser(userId);\n\n      setUser(result);\n      setLoadingModal(false);\n    };\n\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Close modal\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setShowModalBoolean(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                !completed\n                  ? <strong className=\"has-text-danger\">Planned</strong>\n                  : <strong className=\"has-text-success\">Done</strong>\n              }\n              {' by '}\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModalLoading, setIsModalLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [isModalSeen, setIsModalSeen] = useState(false);\n\n  const defaultTodo = {\n    title: '',\n    id: 0,\n    completed: false,\n    userId: 0,\n  };\n\n  const [todo, setTodo] = useState(defaultTodo);\n\n  useEffect(() => {\n    const getTodosFromServer = async () => {\n      setIsLoading(true);\n      const result = await getTodos();\n\n      setTodos(result);\n      setVisibleTodos(result);\n      setIsLoading(false);\n    };\n\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setVisibleTodos={setVisibleTodos}\n                visibleTodos={visibleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {(!!todos.length || !isLoading) && (\n                <TodoList\n                  todos={visibleTodos}\n                  setTodo={setTodo}\n                  setIsModalSeen={setIsModalSeen}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalSeen && (\n        <TodoModal\n          todo={todo}\n          setIsModalSeen={setIsModalSeen}\n          loadingModal={isModalLoading}\n          setLoadingModal={setIsModalLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}